strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"));gg_vk_adsorbed_facet
# 4. van krevelen for adsorbed vs. not adsorbed ----
# 4.1 using facet ----
gg_vk_adsorbed_facet = ggplot(fticr_data_goethite2,
aes (x=OC,y=HC, color=adsorbed, shape=adsorbed))+
geom_point(size=1,stroke=1)+
xlim(0.0,1.2)+
ylim(0.0,2.5)+
scale_shape_manual (values=c(1,4),limits = c("adsorbed","not adsorbed"))+
scale_color_discrete(limits=c("adsorbed","not adsorbed"))+
xlab("O/C")+
ylab("H/C")+
#annotate("text", label = "HW, preF", x = 0.1, y = 2.4)+
geom_hline(yintercept = 1.5,color="black",linetype="dashed")+ #aliph
geom_rect(xmin=0.1,xmax=0.67,ymin=0.7,ymax=1.5,fill=NA,color="black",linetype="dashed")+ #lignin
geom_rect(xmin=0.0,xmax=0.67,ymin=0.2,ymax=0.7,fill=NA,color="black",linetype="dashed")+ #cond.ar
geom_rect(xmin=0.67,xmax=1.2,ymin=1.5,ymax=2.4,fill=NA,color="black",linetype="dashed")+ #carb
facet_grid(Fenton~Forest)+ #facet with two variables
#  annotate("text", label = "lignin", x = 0.25, y = 0.8)+
#  annotate("text", label = "condensed aromatic", x = 0.3, y = 0.3)+
#  annotate("text", label = "aliphatic", x = 0.4, y = 2.4)+
#  annotate("text", label = "aromatic", x = 1.0, y = 1.3)+
#  annotate("text", label = "carbohydrate", x = 1.0, y = 2.3)+
##group boundaries from Ohno et al. 2014| doi: 10.1021/es405570c
theme_bw()+
theme(panel.grid=element_blank(),
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"));gg_vk_adsorbed_facet
save_plot("output/vankrev_adsorbed.tiff", gg_vk_adsorbed_facet,
base_width = 10, base_height = 10)
# 4.2 post-adsorption new using facet ----
gg_vk_ads_new_facet = ggplot(fticr_data_goethite2,
aes (x=OC,y=HC, color=new, shape=new))+
geom_point(size=1,stroke=1)+
xlim(0.0,1.2)+
ylim(0.0,2.5)+
scale_shape_manual (values=c(1),limits = c("new molecules"))+
scale_color_discrete(limits=c("new molecules"))+
xlab("O/C")+
ylab("H/C")+
#annotate("text", label = "HW, preF", x = 0.1, y = 2.4)+
geom_hline(yintercept = 1.5,color="black",linetype="dashed")+ #aliph
geom_rect(xmin=0.1,xmax=0.67,ymin=0.7,ymax=1.5,fill=NA,color="black",linetype="dashed")+ #lignin
geom_rect(xmin=0.0,xmax=0.67,ymin=0.2,ymax=0.7,fill=NA,color="black",linetype="dashed")+ #cond.ar
geom_rect(xmin=0.67,xmax=1.2,ymin=1.5,ymax=2.4,fill=NA,color="black",linetype="dashed")+ #carb
facet_grid(Fenton~Forest)+ #facet with two variables
#  annotate("text", label = "lignin", x = 0.25, y = 0.8)+
#  annotate("text", label = "condensed aromatic", x = 0.3, y = 0.3)+
#  annotate("text", label = "aliphatic", x = 0.4, y = 2.4)+
#  annotate("text", label = "aromatic", x = 1.0, y = 1.3)+
#  annotate("text", label = "carbohydrate", x = 1.0, y = 2.3)+
##group boundaries from Ohno et al. 2014| doi: 10.1021/es405570c
theme_bw()+
theme(panel.grid=element_blank(),
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"));gg_vk_ads_new_facet
save_plot("output/vankrev_ads_newmolecules.tiff", gg_vk_ads_new_facet,
base_width = 10, base_height = 10)
#
# 5. NOSC graph ----
fticr_data_3 = read.csv("fticr/fticr_data_master_longform.csv")
fticr_data_3 = read.csv("fticr/fticr_data_master_longform.csv")
fticr_meta_nosc=read.csv("fticr/fticr_meta_nosc.csv")
fticr_data_4 = merge (fticr_data_3,fticr_meta_subset, by = "Mass", all = T)
View(fticr_data_4)
View(fticr_data_4)
# convert all zeroes to NA
fticr_data_4 %>%
mutate_all(~replace(., . == 0, NA))->
fticr_data_4
fticr_data_4 = fticr_data_4[complete.cases(fticr_data_4),]
ggplot(fticr_data_4[fticr_data_4$treatment=="PreFenton",],
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5, color = "black")+
xlim(-2.5, 2)+
ylim(0,200)+
theme(legend.position = "top")+
ggtitle("PreFenton")
ggplot(fticr_data_4[fticr_data_4$treatment=="PostFenton",],
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5, color = "black")+
xlim(-2.5, 2)+
ylim(0,200)+
theme(legend.position = "top")+
ggtitle("PostFenton")
ggplot(fticr_data_4[fticr_data_4$treatment=="PreFentonGoethite",],
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5, color = "black")+
xlim(-2.5, 2)+
ylim(0,200)+
theme(legend.position = "top")+
ggtitle("PreFentonGoethite")
ggplot(fticr_data_4[fticr_data_4$treatment=="PostFentonGoethite",],
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5, color = "black")+
xlim(-2.5, 2)+
ylim(0,200)+
theme(legend.position = "top")+
ggtitle("PostFentonGoethite")
ggplot(fticr_data_4,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5, color = "black")+
xlim(-2.5, 2)+
ylim(0,200)+
facet_wrap(~treatment)+
theme(legend.position = "top")
names(fticr_data_4)
fticr_data_4 %>%
select(Mass, Forest, treatment, intensity, NOSC, Class)->
fticr_data_NOSC
names(fticr_data_NOSC)
view(fticr_data_NOSC)
fticr_data_4 %>%
select(Mass, Forest, treatment, intensity, NOSC, Class)->
fticr_data_nosc
setDT(fticr_data_nosc)[treatment == "PreFenton", fenton := "initial"]
setDT(fticr_data_nosc)[treatment == "PreFenton", fenton := "initial"]
fticr_data_nosc[treatment == "PostFenton", fenton := "post-Fenton"]
setDT(fticr_data_nosc)[treatment == "PreFenton", goethite := "pre-Goethite"]
fticr_data_nosc[treatment == "PostFenton", goethite := "pre-Goethite"]
View(fticr_data_nosc)
fticr_data_nosc[treatment == "PreFentonGoethite", goethite := "post-Goethite"]
fticr_data_nosc[treatment == "PostFentonGoethite", goethite := "post-Goethite"]
View(fticr_data_nosc)
write_csv(fticr_data_nosc, path = "fticr/fticr_data_nosc.csv")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5, color = "black")+
xlim(-2.5, 2)+
ylim(0,200)+
facet_grid(fenton~goethite)+
theme(legend.position = "top")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5, color = "black")+
xlim(-2.5, 2)+
ylim(0,200)+
facet_grid(goethite~fenton)+
theme(legend.position = "top")
setDT(fticr_data_nosc)[treatment == "PreFenton", fenton := "initial"]
fticr_data_nosc[treatment == "PreFentonGoethite", fenton := "initial"]
fticr_data_nosc[treatment == "PostFenton", fenton := "post-Fenton"]
fticr_data_nosc[treatment == "PostFentonGoethite", fenton := "post-Fenton"]
setDT(fticr_data_nosc)[treatment == "PreFenton", goethite := "pre-Goethite"]
fticr_data_nosc[treatment == "PostFenton", goethite := "pre-Goethite"]
fticr_data_nosc[treatment == "PreFentonGoethite", goethite := "post-Goethite"]
fticr_data_nosc[treatment == "PostFentonGoethite", goethite := "post-Goethite"]
write_csv(fticr_data_nosc, path = "fticr/fticr_data_nosc.csv")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5, color = "black")+
xlim(-2.5, 2)+
ylim(0,200)+
facet_grid(goethite~fenton)+
theme(legend.position = "top")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5, color = "black")+
xlim(-2.5, 2)+
ylim(0,100)+
facet_grid(goethite~fenton)+
theme(legend.position = "top")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5, color = "black")+
xlim(-2.5, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme(legend.position = "top")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme(legend.position = "top")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.2, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme(legend.position = "top")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "dodge", alpha = 0.2, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme(legend.position = "top")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.2, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme(legend.position = "top")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.3, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme(legend.position = "top")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.4, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme(legend.position = "top")
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.4, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme_bw()+
theme(panel.grid=element_blank(),
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"))
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.4, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme_bw()+
theme(
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"))
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold")); gg_nosc
gg_nosc=
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.4, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme_bw()+
theme(
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold")); gg_nosc
save_plot("output/nosc.tiff", gg_nosc,
base_width = 10, base_height = 10)
save_plot("output/nosc.tiff", gg_nosc,
base_width = 12, base_height = 10)
save_plot("output/nosc.tiff", gg_nosc,
base_width = 10, base_height = 8)
gg_nosc=
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.2, position = "identity", alpha = 0.4, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme_bw()+
theme(
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold")); gg_nosc
gg_nosc=
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.25, position = "identity", alpha = 0.4, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme_bw()+
theme(
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold")); gg_nosc
save_plot("output/nosc_2.5.tiff", gg_nosc,
base_width = 10, base_height = 8)
fticr_data_nosc$goethite = factor(fticr_data_nosc$goethite, levels = c("pre_Goethite", "post-Goethite"))
gg_nosc=
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.25, position = "identity", alpha = 0.4, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme_bw()+
theme(
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold")); gg_nosc
View(fticr_data_nosc)
setDT(fticr_data_nosc)[treatment == "PreFenton", fenton := "initial"]
fticr_data_nosc[treatment == "PreFentonGoethite", fenton := "initial"]
fticr_data_nosc[treatment == "PostFenton", fenton := "post-Fenton"]
fticr_data_nosc[treatment == "PostFentonGoethite", fenton := "post-Fenton"]
setDT(fticr_data_nosc)[treatment == "PreFenton", goethite := "pre-Goethite"]
fticr_data_nosc[treatment == "PostFenton", goethite := "pre-Goethite"]
fticr_data_nosc[treatment == "PreFentonGoethite", goethite := "post-Goethite"]
fticr_data_nosc[treatment == "PostFentonGoethite", goethite := "post-Goethite"]
fticr_data_nosc$goethite = factor(fticr_data_nosc$goethite, levels = c("pre-Goethite", "post-Goethite"))
gg_nosc=
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.25, position = "identity", alpha = 0.4, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme_bw()+
theme(
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold")); gg_nosc
save_plot("output/nosc_2.5.tiff", gg_nosc,
base_width = 10, base_height = 8)
save_plot("output/nosc_0.25.tiff", gg_nosc,
base_width = 10, base_height = 8)
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold")); gg_nosc
gg_nosc=
ggplot(fticr_data_nosc,
aes(x = NOSC, fill = Forest))+
geom_histogram(binwidth = 0.10, position = "identity", alpha = 0.4, color = "black")+
xlim(-2, 2)+
ylim(0,75)+
facet_grid(goethite~fenton)+
theme_bw()+
theme(
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold")); gg_nosc
save_plot("output/nosc_0.10.tiff", gg_nosc,
base_width = 10, base_height = 8)
View(fticr_meta_class)
# merge data_fg_merged2 with meta_class
data_fg_merged_el = merge(data_fg_merged2,fticr_meta_elements, by = "Mass", all.x = T)
View(data_fg_merged_el)
# get counts by group and treatment
data_fenton_el = summarySE(data_fg_merged_el, measurevar = "Mass",
groupvars = c("Forest","fenton_loss","Class"),
na.rm = TRUE)
# gather the elements into a single column
data_fg_merged_el2 %>%
gather(element, el_ratio, C:Na)->
data_fg_merged_el2
# gather the elements into a single column
data_fg_merged_el %>%
gather(element, el_ratio, C:Na)->
data_fg_merged_el2
View(data_fg_merged_el2)
# get counts by group and treatment
data_fenton_el = summarySE(data_fg_merged_el2, measurevar = "el_ratio",
groupvars = c("Forest","fenton_loss","element"),
na.rm = TRUE)
View(data_fenton_el)
# remove NA
data_fenton_el = data_fenton_el[complete.cases(data_fenton_el),]
data_fenton_el$el_ratio = round(data_fenton_el$el_ratio,2)
data_fenton_el$el_ratio = round(data_fenton_el$el_ratio,1)
data_fenton_el_summarytable = dcast(data_fenton_el,
Forest+fenton_loss~element, value.var = el_ratio)
data_fenton_el_summarytable = dcast(data_fenton_el,
Forest+fenton_loss~element, value.var = "el_ratio")
View(data_fentoncounts_summarytable)
View(data_fenton_el_summarytable)
data_fenton_el_summarytable = dcast(data_fenton_el,
element~Forest+fenton_loss, value.var = "el_ratio")
View(data_fenton_el_summarytable)
# repeat for goethite-adsorbed
data_goethite_adsorbed_el = summarySE(data_fg_merged_el2, measurevar = "el_ratio",
groupvars = c("Forest","adsorbed","element"),
na.rm = TRUE)
# remove NA
data_goethite_adsorbed_el = data_goethite_adsorbed_el[complete.cases(data_goethite_adsorbed_el),]
data_goethite_adsorbed_el$el_ratio = round(data_goethite_adsorbed_el$el_ratio,1)
data_goethite_adsorbed_el_summarytable = dcast(data_goethite_adsorbed_el,
element~Forest+adsorbed, value.var = "el_ratio")
View(data_goethite_adsorbed_el_summarytable)
View(fticr_data_goethite2)
View(fticr_data_goethite)
View(fticr_meta_elements)
fticr_data_goethite_el = merge(fticr_data_goethite, fticr_meta_elements, by = "Mass", all.x = T)
View(fticr_data_goethite_el)
# gather
fticr_data_goethite_el %>%
gather(element, el_ratio, C:Na)->
fticr_data_goethite_el2
View(fticr_data_goethite_el2)
data_goethite_adsorbed_el = summarySE(fticr_data_goethite_el2, measurevar = "el_ratio",
groupvars = c("Forest","Fenton","adsorbed","element"),
na.rm = TRUE)
View(data_goethite_adsorbed_el)
# remove NA
data_goethite_adsorbed_el = data_goethite_adsorbed_el[complete.cases(data_goethite_adsorbed_el),]
data_goethite_adsorbed_el$el_ratio = round(data_goethite_adsorbed_el$el_ratio,1)
data_goethite_adsorbed_el_summarytable = dcast(data_goethite_adsorbed_el,
Fenton+element~Forest+adsorbed, value.var = "el_ratio")
View(data_goethite_adsorbed_el_summarytable)
data_goethite_adsorbed_el_summarytable = dcast(data_goethite_adsorbed_el,
adsorbed+element~Forest+Fenton, value.var = "el_ratio")
View(data_goethite_adsorbed_el_summarytable)
#
# now repeat the goethite stuff for new molecules
data_goethite_new_el = summarySE(fticr_data_goethite_el2, measurevar = "el_ratio",
groupvars = c("Forest","Fenton","new","element"),
na.rm = TRUE)
View(data_goethite_new_el)
# remove NA
data_goethite_new_el = data_goethite_new_el[complete.cases(data_goethite_new_el),]
data_goethite_new_el$el_ratio = round(data_goethite_new_el$el_ratio,1)
data_goethite_new_el_summarytable = dcast(data_goethite_new_el,
element~Forest+Fenton, value.var = "el_ratio")
View(data_goethite_new_el_summarytable)
### OUTPUT
write_csv(data_fenton_el_summarytable, path = "fticr/data_fenton_el_counts.csv")
write_csv(data_goethite_adsorbed_el_summarytable, path = "fticr/data_goethite_ads_el_counts.csv")
write_csv(data_goethite_new_el_summarytable, path = "fticr/data_goethite_new_el_counts.csv")
