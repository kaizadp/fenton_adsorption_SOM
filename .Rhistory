setDT(fticr_data_goethite)[PreGoethite/minimum == 0 & PostGoethite/minimum > 1, new := "new molecules"]
## OUTPUT
write_csv(fticr_data_goethite,path = "fticr/fticr_data_goethite.csv")
View(fticr_data_goethite)
# summarizing by groups
fticr_data_raw_long %>%
group_by(Forest,Treatment,Fenton, Goethite,soil,Class) %>%
dplyr::summarize(compounds = sum(intensity)) ->
fticr_data_soil_groups
fticr_data_soil_groups_wide = spread(fticr_data_soil_groups,Class,compounds)
fticr_data_soil_groups_wide = as.data.frame(fticr_data_soil_groups_wide)
# create a `total` column adding counts across all "group" columns (columns 4-10)
fticr_data_soil_groups_wide %>%
mutate(total = rowSums(.[6:12])) ->
fticr_data_soil_groups_wide
## relative abundance:
# split the dataset into (a) just the abundance values for easy calculations, and (b) the core key. Then combine again.
fticr_data_soil_groups_wide[,-c(1:5)] %>%
sapply('/', fticr_data_soil_groups_wide$total)->
fticr_data_abundance
fticr_data_abundance = data.frame(fticr_data_abundance)
soilnames = data.frame(fticr_data_soil_groups_wide[,c(1:5)])
fticr_data_relabundance = cbind(soilnames,fticr_data_abundance)
## relative abundance by treatment/site
# convert to long form and then do summary
fticr_data_relabundance_long = fticr_data_relabundance %>%
gather(Class, relabund, AminoSugar:total)
fticr_relabundance_summary = summarySE(fticr_data_relabundance_long, measurevar = "relabund",
groupvars = c("Forest","Treatment","Fenton","Goethite","Class"),na.rm = TRUE)
fticr_relabundance_summary$relativeabundance = paste((round(fticr_relabundance_summary$relabund,3)),
"\u00B1",
round(fticr_relabundance_summary$se,3))
#### summary table for initial samples only
fticr_relabundance_summary_initial = fticr_relabundance_summary[fticr_relabundance_summary$Treatment=="PreFenton",]
fticr_relabundance_summary_initial_summarytable = dcast(fticr_relabundance_summary_initial,
Class~Forest,value.var = "relativeabundance")
#### summary table for treatment effects only
fticr_relabundance_summary_trt = fticr_relabundance_summary[!fticr_relabundance_summary$Treatment=="PreFenton",]
fticr_relabundance_summary_trt_summarytable = dcast(fticr_relabundance_summary_trt,
Class~Forest+Treatment,value.var = "relativeabundance")
View(fticr_relabundance_summary_trt_summarytable)
View(fticr_data_raw_long)
View(fticr_data_raw2)
View(fticr_data_goethite)
soil_key$Fenton = factor(soil_key$Fenton, levels = "PreFenton","PostFenton")
soil_key$Goethite = factor(soil_key$Goethite, levels = "PreGoethite","PostGoethite")
soil_key$Treatment = factor(soil_key$Treatment, levels = "PreFenton","PostFenton","PreFentonGoethite","PostFentonGoethite")
soil_key$Fenton = factor(soil_key$Fenton, levels = c("PreFenton","PostFenton"))
soil_key$Goethite = factor(soil_key$Goethite, levels = c("PreGoethite","PostGoethite"))
soil_key$Treatment = factor(soil_key$Treatment, levels = c("PreFenton","PostFenton","PreFentonGoethite","PostFentonGoethite"))
fticr_data_raw_long = merge(soil_key,fticr_data_raw_long)
write_csv(fticr_data_raw_long, path = "fticr/fticr_data_raw_long.csv")
# select only the relevant columns. don't include the Goethite columns
fticr_data_2 %>%
select(Mass, Forest, PreFenton, PostFenton)->
fticr_data_fenton
# create new column for molecules gained/lost during the Fenton reaction
setDT(fticr_data_fenton)[PreFenton >0 & PostFenton == 0, loss := "lost"]
fticr_data_fenton[PreFenton == 0 & PostFenton > 0, loss := "gained"]
fticr_data_fenton[PreFenton > 0 & PostFenton > 0, loss := "conserved"]
fticr_data_fenton$loss = ordered(fticr_data_fenton$loss, levels = c("lost", "gained", "conserved"))
## OUTPUT
write_csv(fticr_data_fenton,path = "fticr/fticr_data_fenton.csv")
## 2.2 create a new file for goethite ----
# split the MASTER file into two files, for pre-Goethite vs. post-Goethite. gather and add columns indicating whether pre or post F. and then combine.
fticr_data_2 %>%
select(Mass, Forest, PreFenton,PostFenton)->
fticr_data_preg
fticr_data_2 %>%
select(Mass, Forest, PreFentonGoethite,PostFentonGoethite)->
fticr_data_postg
fticr_data_preg %>%
gather(Fenton, PreGoethite, PreFenton:PostFenton)->
fticr_data_preg2
fticr_data_postg %>%
dplyr::rename(PreFenton = PreFentonGoethite) %>%
dplyr::rename(PostFenton = PostFentonGoethite) %>%
gather(Fenton, PostGoethite, PreFenton:PostFenton)->
fticr_data_postg2
#fticr_data_goethite2 = cbind(fticr_data_preg2,fticr_data_postg2)
fticr_data_goethite = merge(fticr_data_preg2,fticr_data_postg2)
fticr_data_goethite[fticr_data_goethite==0]<-NA
minimum = min(c(fticr_data_goethite$PreGoethite, fticr_data_goethite$PostGoethite), na.rm = TRUE)
# then convert NA back to 0
fticr_data_goethite[is.na(fticr_data_goethite)]<-0
setDT(fticr_data_goethite)[PreGoethite/minimum >2 & PostGoethite/minimum < 1, adsorbed := "adsorbed"]
fticr_data_goethite[PreGoethite/minimum >2 & PostGoethite/minimum > 1, adsorbed := "not adsorbed"]
# new molecules created post-adsorption
setDT(fticr_data_goethite)[PreGoethite/minimum == 0 & PostGoethite/minimum > 1, new := "new molecules"]
## OUTPUT
write_csv(fticr_data_goethite,path = "fticr/fticr_data_goethite.csv")
# summarizing by groups
fticr_data_raw_long %>%
group_by(Forest,Treatment,Fenton, Goethite,soil,Class) %>%
dplyr::summarize(compounds = sum(intensity)) ->
fticr_data_soil_groups
fticr_data_soil_groups_wide = spread(fticr_data_soil_groups,Class,compounds)
View(fticr_data_raw_long)
# summarizing by groups
fticr_data_raw_long %>%
group_by(Forest,Treatment,Fenton, Goethite,soil,Class) %>%
dplyr::summarize(compounds = sum(intensity)) ->
fticr_data_soil_groups
fticr_data_raw2 %>%
gather(soil, intensity, Soil_1:Soil_24)->
fticr_data_raw_long
View(fticr_data_raw_long)
fticr_data_raw_long = merge(soil_key,fticr_data_raw_long)
View(fticr_data_raw_long)
write_csv(fticr_data_raw_long, path = "fticr/fticr_data_raw_long.csv")
# summarizing by groups
fticr_data_raw_long %>%
group_by(Forest,Treatment,Fenton, Goethite,soil,Class) %>%
dplyr::summarize(compounds = sum(intensity)) ->
fticr_data_soil_groups
View(fticr_data_raw_long)
View(fticr_data_soil_groups)
fticr_data_soil_groups_wide = spread(fticr_data_soil_groups,Class,compounds)
View(fticr_data_soil_groups_wide)
View(fticr_data_raw_long)
View(fticr_data_raw2)
fticr_data_raw2 %>%
gather(soil, intensity, Soil_1:Soil_24)->
fticr_data_raw_long
View(fticr_data_raw_long)
fticr_data_raw_long = merge(soil_key,fticr_data_raw_long)
fticr_data_raw2 %>%
gather(soil, intensity, Soil_1:Soil_24)->
fticr_data_raw_long
View(soil_key)
### 1.2.2 raw files ----
soil_key = read_csv("data/soil_key.csv")
View(soil_key)
soil_key$Fenton = factor(soil_key$Fenton, levels = c("PreFenton","PostFenton"))
soil_key$Goethite = factor(soil_key$Goethite, levels = c("PreGoethite","PostGoethite"))
soil_key$Treatment = factor(soil_key$Treatment, levels = c("PreFenton","PostFenton","PreFentonGoethite","PostFentonGoethite"))
View(fticr_data_raw_long)
fticr_data_raw_long = merge(fticr_data_raw_long,soil_key, by = "soil", all.x = T)
write_csv(fticr_data_raw_long, path = "fticr/fticr_data_raw_long.csv")
# summarizing by groups
fticr_data_raw_long %>%
group_by(Forest,Treatment,Fenton, Goethite,soil,Class) %>%
dplyr::summarize(compounds = sum(intensity)) ->
fticr_data_soil_groups
View(fticr_data_soil_groups)
fticr_data_soil_groups_wide = spread(fticr_data_soil_groups,Class,compounds)
View(fticr_data_soil_groups_wide)
fticr_data_soil_groups_wide = as.data.frame(fticr_data_soil_groups_wide)
# create a `total` column adding counts across all "group" columns (columns 4-10)
fticr_data_soil_groups_wide %>%
mutate(total = rowSums(.[6:12])) ->
fticr_data_soil_groups_wide
## relative abundance:
# split the dataset into (a) just the abundance values for easy calculations, and (b) the core key. Then combine again.
fticr_data_soil_groups_wide[,-c(1:5)] %>%
sapply('/', fticr_data_soil_groups_wide$total)->
fticr_data_abundance
View(fticr_data_abundance)
fticr_data_abundance = data.frame(fticr_data_abundance)
soilnames = data.frame(fticr_data_soil_groups_wide[,c(1:5)])
fticr_data_relabundance = cbind(soilnames,fticr_data_abundance)
View(fticr_data_relabundance)
## relative abundance by treatment/site
# convert to long form and then do summary
fticr_data_relabundance_long = fticr_data_relabundance %>%
gather(Class, relabund, AminoSugar:total)
fticr_relabundance_summary = summarySE(fticr_data_relabundance_long, measurevar = "relabund",
groupvars = c("Forest","Treatment","Fenton","Goethite","Class"),na.rm = TRUE)
fticr_relabundance_summary$relativeabundance = paste((round(fticr_relabundance_summary$relabund,3)),
"\u00B1",
round(fticr_relabundance_summary$se,3))
View(fticr_relabundance_summary)
#### summary table for initial samples only
fticr_relabundance_summary_initial = fticr_relabundance_summary[fticr_relabundance_summary$Treatment=="PreFenton",]
fticr_relabundance_summary_initial_summarytable = dcast(fticr_relabundance_summary_initial,
Class~Forest,value.var = "relativeabundance")
#### summary table for treatment effects only
fticr_relabundance_summary_trt = fticr_relabundance_summary[!fticr_relabundance_summary$Treatment=="PreFenton",]
fticr_relabundance_summary_trt_summarytable = dcast(fticr_relabundance_summary_trt,
Class~Forest+Treatment,value.var = "relativeabundance")
View(fticr_relabundance_summary_trt_summarytable)
fticr_relabundance_summarytable = dcast(fticr_relabundance_summary,
Class~Forest+Treatment,value.var = "relativeabundance")
View(fticr_relabundance_summary_trt_summarytable)
View(fticr_relabundance_summarytable)
### OUTPUT
write.csv(fticr_soil_relabundance_summarytable,"output/table1_fticr_soil_relabundance_groups.csv")
fticr_relabundance_summarytable = dcast(fticr_relabundance_summary,
Class~Forest+Treatment,value.var = "relativeabundance")
### OUTPUT
write.csv(fticr_relabundance_summarytable,"output/table1_fticr_soil_relabundance_groups.csv")
fticr_relabundance_summary_trt_summarytable = dcast(fticr_relabundance_summary_trt,
Goethite+Class~Forest+Fenton,value.var = "relativeabundance")
### OUTPUT
write.csv(fticr_relabundance_summarytable,"output/table1_fticr_soil_relabundance_groups.csv")
fticr_relabundance_summarytable = dcast(fticr_relabundance_summary,
Goethite+Class~Forest+Fenton,value.var = "relativeabundance")
### OUTPUT
write.csv(fticr_relabundance_summarytable,"output/table1_fticr_soil_relabundance_groups.csv")
# merge the fenton and goethite files
data_fg_merged = merge(fticr_data_fenton,fticr_data_goethite, all = T)
View(data_fg_merged)
View(fticr_data_fenton)
View(fticr_data_goethite)
# merge the fenton and goethite files
data_fg_merged = merge(fticr_data_fenton,fticr_data_goethite, by = c("Mass","Forest"), all = T)
names(data_fg_merged)
source("0-packages.R")
fticr_data_fenton = read.csv("fticr/fticr_data_fenton.csv")
fticr_data_goethite = read.csv("fticr/fticr_data_goethite.csv")
fticr_data_2 = read.csv("fticr/fticr_data_master.csv")
fticr_data_3 = read.csv("fticr/fticr_data_master_longform.csv")
fticr_meta_subset = read.csv("fticr/fticr_meta_subset.csv")
fticr_meta_hcoc=read.csv("fticr/fticr_meta_hcoc.csv")
# merge files with the meta for van krevelen plots
fticr_data_fenton2 = merge(fticr_data_fenton, fticr_meta_subset,by = "Mass", all.x = T)
fticr_data_goethite2 = merge(fticr_data_goethite,fticr_meta_subset, by="Mass", all.x = T)
fticr_data_2_hcoc = merge(fticr_data_2,fticr_meta_hcoc, by="Mass", all.x = T)
fticr_data_goethite2$Fenton = factor(fticr_data_goethite2$Fenton, levels = c("PreFenton","PostFenton"))
View(fticr_data_goethite2)
View(fticr_meta_subset)
# 1. load files ---------------------- ####
## 1.1 create metadata file ----
# importing full data file
fticr_meta = read_excel("Master-Formularity-reprocessing V2.xlsx", sheet = "RAW")
# remove sample data columns. All sample names are Pre-xxx or Post-xxx
# remove unnamed columns 39-40-41
fticr_meta %>%
select(-starts_with("Pre")) %>%
select(-starts_with("Post")) %>%
select(-c("...39","...40","...41")) %>%
select(-c("C13", "Candidates","outlier")) %>%
mutate(Mass = round(Mass,4))-> # round this to 4 decimal places
fticr_meta
# create a new column for NOSC
fticr_meta %>%
mutate(NOSC = 4 - (((4*C) + H - (3*N) - (2*O) - (2*S))/C)) %>%
dplyr::rename(HC = H.C) %>%
dplyr:: rename(OC = O.C)->
fticr_meta
# create a smaller meta file for only HC OC
fticr_meta %>%
select(Mass, HC, OC) ->
fticr_meta_hcoc
View(fticr_meta)
# create a subset of META for only relevant columns
fticr_meta %>%
select(Mass, HC, OC,
El_comp,
NOSC,
Class,
KM_CH2, KMD_CH2,
AI_0)->
fticr_meta_subset
write_csv(fticr_meta_subset, path = "fticr/fticr_meta_subset.csv")
fticr_meta_subset = read.csv("fticr/fticr_meta_subset.csv")
View(fticr_meta_subset)
# merge files with the meta for van krevelen plots
fticr_data_fenton2 = merge(fticr_data_fenton, fticr_meta_subset,by = "Mass", all.x = T)
fticr_data_goethite2 = merge(fticr_data_goethite,fticr_meta_subset, by="Mass", all.x = T)
ggplot(fticr_data_goethite2,
aes (x=OC,y=HC, color=adsorbed, shape=adsorbed))+
geom_point(size=1,stroke=1)+
xlim(0.0,1.2)+
ylim(0.0,2.5)+
scale_shape_manual (values=c(1,4),limits = c("adsorbed","not adsorbed"))+
scale_color_discrete(limits=c("adsorbed","not adsorbed"))+
xlab("O/C")+
ylab("H/C")+
#annotate("text", label = "HW, preF", x = 0.1, y = 2.4)+
geom_hline(yintercept = 1.5,color="black",linetype="dashed")+ #aliph
geom_rect(xmin=0.1,xmax=0.67,ymin=0.7,ymax=1.5,fill=NA,color="black",linetype="dashed")+ #lignin
geom_rect(xmin=0.0,xmax=0.67,ymin=0.2,ymax=0.7,fill=NA,color="black",linetype="dashed")+ #cond.ar
geom_rect(xmin=0.67,xmax=1.2,ymin=1.5,ymax=2.4,fill=NA,color="black",linetype="dashed")+ #carb
facet_grid(Fenton~Forest+El_comp)+ #facet with two variables
#  annotate("text", label = "lignin", x = 0.25, y = 0.8)+
#  annotate("text", label = "condensed aromatic", x = 0.3, y = 0.3)+
#  annotate("text", label = "aliphatic", x = 0.4, y = 2.4)+
#  annotate("text", label = "aromatic", x = 1.0, y = 1.3)+
#  annotate("text", label = "carbohydrate", x = 1.0, y = 2.3)+
##group boundaries from Ohno et al. 2014| doi: 10.1021/es405570c
theme_bw()+
theme(panel.grid=element_blank(),
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"));gg_vk_adsorbed_facet
View(fticr_data_goethite2)
ggplot(fticr_data_goethite2[fticr_data_goethite2$Fenton=="PreFenton"&
fticr_data_goethite2$Forest=="HW",],
aes (x=OC,y=HC, color=adsorbed, shape=adsorbed))+
geom_point(size=1,stroke=1)+
xlim(0.0,1.2)+
ylim(0.0,2.5)+
scale_shape_manual (values=c(1,4),limits = c("adsorbed","not adsorbed"))+
scale_color_discrete(limits=c("adsorbed","not adsorbed"))+
xlab("O/C")+
ylab("H/C")+
#annotate("text", label = "HW, preF", x = 0.1, y = 2.4)+
geom_hline(yintercept = 1.5,color="black",linetype="dashed")+ #aliph
geom_rect(xmin=0.1,xmax=0.67,ymin=0.7,ymax=1.5,fill=NA,color="black",linetype="dashed")+ #lignin
geom_rect(xmin=0.0,xmax=0.67,ymin=0.2,ymax=0.7,fill=NA,color="black",linetype="dashed")+ #cond.ar
geom_rect(xmin=0.67,xmax=1.2,ymin=1.5,ymax=2.4,fill=NA,color="black",linetype="dashed")+ #carb
facet_wrap(~El_comp)+ #facet with two variables
theme_bw()+
theme(panel.grid=element_blank(),
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"))
ggplot(fticr_data_goethite2[fticr_data_goethite2$Fenton=="PostFenton"&
fticr_data_goethite2$Forest=="HW",],
aes (x=OC,y=HC, color=adsorbed, shape=adsorbed))+
geom_point(size=1,stroke=1)+
xlim(0.0,1.2)+
ylim(0.0,2.5)+
scale_shape_manual (values=c(1,4),limits = c("adsorbed","not adsorbed"))+
scale_color_discrete(limits=c("adsorbed","not adsorbed"))+
xlab("O/C")+
ylab("H/C")+
#annotate("text", label = "HW, preF", x = 0.1, y = 2.4)+
geom_hline(yintercept = 1.5,color="black",linetype="dashed")+ #aliph
geom_rect(xmin=0.1,xmax=0.67,ymin=0.7,ymax=1.5,fill=NA,color="black",linetype="dashed")+ #lignin
geom_rect(xmin=0.0,xmax=0.67,ymin=0.2,ymax=0.7,fill=NA,color="black",linetype="dashed")+ #cond.ar
geom_rect(xmin=0.67,xmax=1.2,ymin=1.5,ymax=2.4,fill=NA,color="black",linetype="dashed")+ #carb
facet_wrap(~El_comp)+ #facet with two variables
theme_bw()+
theme(panel.grid=element_blank(),
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"))
ggplot(fticr_data_goethite2[fticr_data_goethite2$Fenton=="PostFenton"&
fticr_data_goethite2$Forest=="SW",],
aes (x=OC,y=HC, color=adsorbed, shape=adsorbed))+
geom_point(size=1,stroke=1)+
xlim(0.0,1.2)+
ylim(0.0,2.5)+
scale_shape_manual (values=c(1,4),limits = c("adsorbed","not adsorbed"))+
scale_color_discrete(limits=c("adsorbed","not adsorbed"))+
xlab("O/C")+
ylab("H/C")+
#annotate("text", label = "HW, preF", x = 0.1, y = 2.4)+
geom_hline(yintercept = 1.5,color="black",linetype="dashed")+ #aliph
geom_rect(xmin=0.1,xmax=0.67,ymin=0.7,ymax=1.5,fill=NA,color="black",linetype="dashed")+ #lignin
geom_rect(xmin=0.0,xmax=0.67,ymin=0.2,ymax=0.7,fill=NA,color="black",linetype="dashed")+ #cond.ar
geom_rect(xmin=0.67,xmax=1.2,ymin=1.5,ymax=2.4,fill=NA,color="black",linetype="dashed")+ #carb
facet_wrap(~El_comp)+ #facet with two variables
theme_bw()+
theme(panel.grid=element_blank(),
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"))
ggplot(fticr_data_goethite2[fticr_data_goethite2$Fenton=="PreFenton"&
fticr_data_goethite2$Forest=="SW",],
aes (x=OC,y=HC, color=adsorbed, shape=adsorbed))+
geom_point(size=1,stroke=1)+
xlim(0.0,1.2)+
ylim(0.0,2.5)+
scale_shape_manual (values=c(1,4),limits = c("adsorbed","not adsorbed"))+
scale_color_discrete(limits=c("adsorbed","not adsorbed"))+
xlab("O/C")+
ylab("H/C")+
#annotate("text", label = "HW, preF", x = 0.1, y = 2.4)+
geom_hline(yintercept = 1.5,color="black",linetype="dashed")+ #aliph
geom_rect(xmin=0.1,xmax=0.67,ymin=0.7,ymax=1.5,fill=NA,color="black",linetype="dashed")+ #lignin
geom_rect(xmin=0.0,xmax=0.67,ymin=0.2,ymax=0.7,fill=NA,color="black",linetype="dashed")+ #cond.ar
geom_rect(xmin=0.67,xmax=1.2,ymin=1.5,ymax=2.4,fill=NA,color="black",linetype="dashed")+ #carb
facet_wrap(~El_comp)+ #facet with two variables
theme_bw()+
theme(panel.grid=element_blank(),
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"))
#trial
fticr_data_goethite2_elcomp = fticr_data_goethite2[fticr_data_goethite2$El_comp=="CHO"|fticr_data_goethite2$El_comp=="CHONS",]
View(fticr_data_goethite2_elcomp)
#trial
fticr_data_goethite2_elcomp = fticr_data_goethite2[fticr_data_goethite2$El_comp=="CHO"&fticr_data_goethite2$El_comp=="CHONS",]
#trial
fticr_data_goethite2_elcomp = fticr_data_goethite2[fticr_data_goethite2$El_comp=="CHO"&fticr_data_goethite2$El_comp=="CHON",]
#trial
fticr_data_goethite2_elcomp = fticr_data_goethite2[,fticr_data_goethite2$El_comp=="CHO"&fticr_data_goethite2$El_comp=="CHON"]
fticr_data_goethite2_elcomp = as.data.frame(fticr_data_goethite2_elcomp)
str(fticr_data_goethite2_elcomp)
str(fticr_data_goethite2_elcomp)
#trial
fticr_data_goethite2_elcomp = fticr_data_goethite2[,fticr_data_goethite2$El_comp=="CHO"&fticr_data_goethite2$El_comp=="CHON"]
str(fticr_data_goethite2_elcomp)
#trial
fticr_data_goethite2_elcomp = fticr_data_goethite2[fticr_data_goethite2$El_comp=="CHO"&fticr_data_goethite2$El_comp=="CHON",]
str(fticr_data_goethite2_elcomp)
fticr_data_goethite2 %>%
filter(El_comp=="CHO"|El_comp=="CHON")->
fticr_data_goethite2_elcomp
View(fticr_data_goethite2_elcomp)
ggplot(fticr_data_goethite2_elcomp[fticr_data_goethite2_elcomp$Fenton=="PreFenton"&
fticr_data_goethite2_elcomp$Forest=="SW",],
aes (x=OC,y=HC, color=adsorbed, shape=adsorbed))+
geom_point(size=1,stroke=1)+
xlim(0.0,1.2)+
ylim(0.0,2.5)+
scale_shape_manual (values=c(1,4),limits = c("adsorbed","not adsorbed"))+
scale_color_discrete(limits=c("adsorbed","not adsorbed"))+
xlab("O/C")+
ylab("H/C")+
#annotate("text", label = "HW, preF", x = 0.1, y = 2.4)+
geom_hline(yintercept = 1.5,color="black",linetype="dashed")+ #aliph
geom_rect(xmin=0.1,xmax=0.67,ymin=0.7,ymax=1.5,fill=NA,color="black",linetype="dashed")+ #lignin
geom_rect(xmin=0.0,xmax=0.67,ymin=0.2,ymax=0.7,fill=NA,color="black",linetype="dashed")+ #cond.ar
geom_rect(xmin=0.67,xmax=1.2,ymin=1.5,ymax=2.4,fill=NA,color="black",linetype="dashed")+ #carb
facet_wrap(~El_comp)+ #facet with two variables
theme_bw()+
theme(panel.grid=element_blank(),
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"))
ggplot(fticr_data_goethite2_elcomp, #[fticr_data_goethite2_elcomp$Fenton=="PreFenton"&fticr_data_goethite2_elcomp$Forest=="SW",],
aes (x=OC,y=HC, color=adsorbed, shape=adsorbed))+
geom_point(size=1,stroke=1)+
xlim(0.0,1.2)+
ylim(0.0,2.5)+
scale_shape_manual (values=c(1,4),limits = c("adsorbed","not adsorbed"))+
scale_color_discrete(limits=c("adsorbed","not adsorbed"))+
xlab("O/C")+
ylab("H/C")+
#annotate("text", label = "HW, preF", x = 0.1, y = 2.4)+
geom_hline(yintercept = 1.5,color="black",linetype="dashed")+ #aliph
geom_rect(xmin=0.1,xmax=0.67,ymin=0.7,ymax=1.5,fill=NA,color="black",linetype="dashed")+ #lignin
geom_rect(xmin=0.0,xmax=0.67,ymin=0.2,ymax=0.7,fill=NA,color="black",linetype="dashed")+ #cond.ar
geom_rect(xmin=0.67,xmax=1.2,ymin=1.5,ymax=2.4,fill=NA,color="black",linetype="dashed")+ #carb
# facet_wrap(~El_comp)+ #facet with two variables
facet_grid(Fenton~El_comp+Forest) +
theme_bw()+
theme(panel.grid=element_blank(),
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"))
ggplot(fticr_data_goethite2_elcomp, #[fticr_data_goethite2_elcomp$Fenton=="PreFenton"&fticr_data_goethite2_elcomp$Forest=="SW",],
aes (x=OC,y=HC, color=adsorbed, shape=adsorbed))+
geom_point(size=1,stroke=1)+
xlim(0.0,1.2)+
ylim(0.0,2.5)+
scale_shape_manual (values=c(1,4),limits = c("adsorbed","not adsorbed"))+
scale_color_discrete(limits=c("adsorbed","not adsorbed"))+
xlab("O/C")+
ylab("H/C")+
#annotate("text", label = "HW, preF", x = 0.1, y = 2.4)+
geom_hline(yintercept = 1.5,color="black",linetype="dashed")+ #aliph
geom_rect(xmin=0.1,xmax=0.67,ymin=0.7,ymax=1.5,fill=NA,color="black",linetype="dashed")+ #lignin
geom_rect(xmin=0.0,xmax=0.67,ymin=0.2,ymax=0.7,fill=NA,color="black",linetype="dashed")+ #cond.ar
geom_rect(xmin=0.67,xmax=1.2,ymin=1.5,ymax=2.4,fill=NA,color="black",linetype="dashed")+ #carb
# facet_wrap(~El_comp)+ #facet with two variables
facet_grid(Fenton~Forest+El_comp) +
theme_bw()+
theme(panel.grid=element_blank(),
legend.position="top",
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold"), #facet labels
legend.title=element_blank(),
legend.text=element_text(size=12),
panel.border=element_rect(color="black",size=1.5),
axis.text=element_text(size=12,color="black"),
axis.title=element_text(size=14,color="black",face="bold"))
