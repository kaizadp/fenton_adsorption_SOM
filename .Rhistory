xlab("number of O")+
facet_wrap(~Class, scales = "free")+
theme_kp()
ggplot(fenton_temp2[!fenton_temp2$loss=="conserved",], aes(x=as.factor(O), y=count2, fill=loss))+
geom_bar(stat = "identity", alpha=0.8)+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))+
ylab("number of peaks")+
xlab("number of O")+
facet_wrap(~Class)+
theme_kp()
ggplot(sorbed_temp2[sorbed_temp2$adsorbed=="sorbed",], aes(x=as.factor(O), y=count, fill=fenton))+
geom_bar(stat = "identity", alpha=0.8)+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(breaks = c("5","10","15","20","25","30"))+
# scale_x_continuous(limits = c(0,30))+
ylab("number of peaks")+
xlab("number of O")+
facet_grid(fenton~Class)+
theme_kp()
ggplot(fenton_temp2[!fenton_temp2$loss=="conserved",], aes(x=as.factor(O), y=count2, fill=loss))+
geom_bar(stat = "identity", alpha=0.8)+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))+
ylab("number of peaks")+
xlab("number of O")+
facet_wrap(~Class)+
theme_kp()
ggplot(fenton_temp2[!fenton_temp2$loss=="conserved",], aes(x=as.factor(O), y=count2, fill=loss))+
geom_bar(stat = "identity", alpha=0.8)+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(breaks = c( "5","10","15","20","25","30"))+
ylab("number of peaks")+
xlab("number of O")+
facet_wrap(~Class)+
theme_kp()
ggplot(fenton_temp2[!fenton_temp2$loss=="conserved",], aes(x=as.factor(O), y=count2, fill=loss))+
geom_bar(stat = "identity", alpha=0.8)+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(breaks = c("2", "5","10","15","20","25","30"))+
ylab("number of peaks")+
xlab("number of O")+
facet_wrap(~Class)+
theme_kp()
ggplot(sorbed_temp2[sorbed_temp2$adsorbed=="sorbed",], aes(x=as.factor(O), y=count, fill=fenton))+
geom_bar(stat = "identity", alpha=0.8)+
scale_fill_brewer(palette="Dark2")+
scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))+
# scale_x_continuous(limits = c(0,30))+
ylab("number of peaks")+
xlab("number of O")+
facet_grid(fenton~Class)+
theme_kp()
ggplot(sorbed_temp2[sorbed_temp2$adsorbed=="sorbed",], aes(x=as.factor(OC), y=count, fill=fenton))+
geom_bar(stat = "identity", alpha=0.8)+
scale_fill_brewer(palette="Dark2")+
#  scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))+
# scale_x_continuous(limits = c(0,30))+
ylab("number of peaks")+
xlab("number of O")+
facet_grid(fenton~Class)+
theme_kp()
ggplot(sorbed_temp1[sorbed_temp1$adsorbed=="sorbed",], aes(x=as.factor(OC), y=count, fill=fenton))+
geom_bar(stat = "identity", alpha=0.8)+
scale_fill_brewer(palette="Dark2")+
#  scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))+
# scale_x_continuous(limits = c(0,30))+
ylab("number of peaks")+
xlab("number of O")+
facet_grid(fenton~Class)+
theme_kp()
View(temp_master)
View(master_el)
master_el %>%
left_join(class, by = "Mass") %>%
group_by(Treatment,Class,O) %>%
dplyr::summarise(count = n()) %>%
ungroup %>%
group_by(Treatment,Class) %>%
dplyr::mutate(cumsum = cumsum(count))->temp_master
master_el %>%
left_join(class, by = "Mass") %>%
group_by(Treatment,Class,O) %>%
dplyr::summarise(count = n()) %>%
ungroup %>%
group_by(Treatment,Class) ->temp_master
ggplot(temp_master, aes(x = O, y =count, fill = Treatment))+
geom_bar(stat = "identity")
ggplot(temp_master, aes(x = O, y =count, fill = Treatment))+
geom_bar(stat = "identity")+
facet_grid(Treatment, Class)
ggplot(temp_master, aes(x = O, y =count, fill = Treatment))+
geom_bar(stat = "identity")+
facet_grid(Treatment~ Class)
ggplot(temp_master[temp_master$Class=="Carbohydrate-like"| temp_master$Class=="Lignin-like",], aes(x = O, y =count, fill = Treatment))+
geom_bar(stat = "identity")+
facet_grid(Treatment~ Class)
ggplot(temp_master[temp_master$Class=="Carbohydrate-like"| temp_master$Class=="Lignin-like",], aes(x = O, y =count, fill = Treatment))+
geom_bar(stat = "identity")+
facet_grid(Treatment~ Class)+
theme_kp()
master_el %>%
left_join(class, by = "Mass")
master_el %>%
left_join(class, by = "Mass") %>%
group_by(Treatment,Class) %>% dplyr::summarise(median=median(O))
master_el %>%
left_join(class, by = "Mass") %>%
filter(Class=="Carbohydrate-like"|Class=="Lignin-like") %>%
group_by(Treatment,Class) %>% dplyr::summarise(median=median(O))
master_el %>%
left_join(class, by = "Mass") %>%
filter(Class=="Carbohydrate-like"|Class=="Lignin-like") %>%
group_by(Class,Treatment) %>% dplyr::summarise(median=median(O))
View(sorbed)
sorbed %>%
spread(fenton, adsorbed)
sorbed_temp1 %>%
group_by(Class,adsorbed, fenton) %>%
dplyr::summarize(median = median(O)) %>%
filter(!is.na(PreFenton))
sorbed %>%
spread(fenton, adsorbed)%>%
filter(!is.na(PreFenton))
sorbed %>%
spread(fenton, adsorbed)%>%
filter(!is.na(PreFenton)) %>%
gather(key = "fenton", value ="sorbed", PreFenton:PostFenton)
sorbed %>%
spread(fenton, adsorbed)%>%
filter(!is.na(PreFenton)) %>%
gather(key = "fenton", value ="sorbed", PreFenton:PostFenton)->sorbed_initial_temp
View(sorbed_initial_temp)
gg_vankrev(sorbed_initial_temp, aes(x = OC, y=HC, color = sorbed))+
facet_grid(Class~fenton)
sorbed %>%
spread(fenton, adsorbed)%>%
filter(!is.na(PreFenton)) %>%
gather(key = "fenton", value ="sorbed", PreFenton:PostFenton) %>%
filter(Class=="Carbohydrate-like"|Class=="Lignin-like") ->sorbed_initial_temp
gg_vankrev(sorbed_initial_temp, aes(x = OC, y=HC, color = sorbed))+
facet_grid(Class~fenton)
gg_vankrev(sorbed_initial_temp[sorbed_initial_temp$sorbed=="sorbed",], aes(x = OC, y=HC, color = sorbed))+
facet_grid(Class~fenton)
gg_vankrev(sorbed_initial_temp[sorbed_initial_temp$sorbed=="sorbed",], aes(x = OC, y=HC, color = fenton))+
facet_wrap(~Class)
gg_vankrev(sorbed_initial_temp, aes(x = OC, y=HC, color = sorbed))+
facet_grid(fenton~Class)
gg_vankrev(!is.na(sorbed_initial_temp), aes(x = OC, y=HC, color = sorbed))+
facet_grid(fenton~Class)
gg_vankrev(na.omit(sorbed_initial_temp), aes(x = OC, y=HC, color = sorbed))+
facet_grid(fenton~Class)
sorbed_temp1 %>%
group_by(Class,adsorbed, fenton) %>%
dplyr::summarize(median = median(O))
View(sorbed_temp1)
sorbed_temp1 %>%
group_by(Class,adsorbed, fenton) %>%
dplyr::summarize(median = median(OC))
sorbed_temp1 %>%
group_by(adsorbed, fenton) %>%
dplyr::summarize(median = median(OC))
sorbed_temp1 %>%
group_by(adsorbed, fenton) %>%
dplyr::summarize(median = median(HC))
sorbed_temp1 %>%
group_by(adsorbed, fenton) %>%
dplyr::summarize(median = median(OC))
sorbed_temp1 %>%
group_by(adsorbed, fenton) %>%
dplyr::summarize(median = median(O))
ggplot(sorbed_relabund2[sorbed_relabund2$adsorbed=="sorbed",], aes(x=Class, y=relabund, fill=fenton))+
geom_bar(stat="identity", position = position_dodge(width=0.7),width=0.5, alpha=0.8,color="black",size=0.7)+
#  scale_fill_manual(values = c("#B35806","#542788"))+
#  scale_fill_manual(values = c("#F1A340","#998EC3"))+
scale_fill_manual(values = c("grey80","darkblue"))+
ylab("% of total sorbed peaks")+
xlab("")+
theme_bw()+
theme_kp()+
theme(axis.text.x = element_text(angle = 90, hjust = 1, face="plain", size = 12))
fenton_el %>%
left_join(class, by = "Mass")-> fenton_el2
ggplot(fenton_el2, aes(x = O, fill = loss))+
geom_histogram()+
facet_grid(loss~Class)
master %>%
left_join(class, by = "Mass") %>%
left_join(meta_elements, by = "Mass")->master2
ggplot(master2, aes(x = O))+
geom_histogram()+
facet_grid(Treatment~Class)
# set order of levels
sorbed %>%
dplyr::mutate(fenton=factor(fenton, levels = c("PreFenton","PostFenton")))->sorbed
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
scale_color_manual(values = c("grey80","darkblue"))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
scale_color_manual(values = c("grey69","darkblue"))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
# set order of levels
sorbed %>%
dplyr::mutate(fenton=factor(fenton, levels = c("PreFenton","PostFenton")))->sorbed
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
scale_color_manual(values = c("grey50","darkblue"))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
scale_color_manual(values = c("grey50","darkblue"))+
scale_shape_manual(values = c(16,1))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
# set order of levels
sorbed %>%
dplyr::mutate(fenton=factor(fenton, levels = c("PreFenton","PostFenton")))->sorbed
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
scale_color_manual(values = c("grey50","darkblue"))+
scale_shape_manual(values = c(16,1))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
scale_color_manual(values = c("grey50","darkblue"))+
scale_shape_manual(values = c(1,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
# set order of levels
sorbed %>%
dplyr::mutate(fenton=factor(fenton, levels = c("PreFenton","PostFenton")))->sorbed
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
scale_color_manual(values = c("black","darkblue"))+
scale_shape_manual(values = c(1,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
geom_point(stroke=1)+
scale_color_manual(values = c("black","darkblue"))+
scale_shape_manual(values = c(1,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
geom_point(stroke=0.5)+
scale_color_manual(values = c("black","darkblue"))+
scale_shape_manual(values = c(1,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
geom_point(stroke=0.5)+
scale_color_manual(values = c("grey69","darkblue"))+
scale_shape_manual(values = c(1,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
#geom_point(stroke=0.5)+
scale_color_manual(values = c("grey69","darkblue"))+
scale_shape_manual(values = c(1,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
#geom_point(stroke=0.5)+
scale_color_manual(values = c("black","darkblue"))+
scale_shape_manual(values = c(1,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
ggplot(data,mapping)+
# plot points
geom_point(size=2, alpha = 0.5)+ # set size and transparency
# axis labels
ylab("H/C")+
xlab("O/C")+
# axis limits
xlim(0,1.25)+
ylim(0,2.5)+
# add boundary lines for Van Krevelen regions
geom_segment(x = 0.0, y = 1.5, xend = 1.2, yend = 1.5,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 2, xend = 1.2, yend = 2,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 1, xend = 1.2, yend = 0.75,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 0.7, xend = 1.2, yend = 0.5,color="black",linetype="longdash")
# create a custom ggplot function for Van Krevelen plots
gg_vankrev <- function(data,mapping){
ggplot(data,mapping)+
# plot points
geom_point(size=2, alpha = 0.5)+ # set size and transparency
# axis labels
ylab("H/C")+
xlab("O/C")+
# axis limits
xlim(0,1.25)+
ylim(0,2.5)+
# add boundary lines for Van Krevelen regions
geom_segment(x = 0.0, y = 1.5, xend = 1.2, yend = 1.5,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 2, xend = 1.2, yend = 2,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 1, xend = 1.2, yend = 0.75,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 0.7, xend = 1.2, yend = 0.5,color="black",linetype="longdash")
}
# set order of levels
sorbed %>%
dplyr::mutate(fenton=factor(fenton, levels = c("PreFenton","PostFenton")))->sorbed
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
#geom_point(stroke=0.5)+
scale_color_manual(values = c("black","darkblue"))+
scale_shape_manual(values = c(1,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
#geom_point(stroke=0.5)+
scale_color_manual(values = c("black","darkblue"))+
#  scale_shape_manual(values = c(1,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
#geom_point(stroke=0.5)+
scale_color_manual(values = c("black","darkblue"))+
scale_shape_manual(values = c(16,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
#geom_point(stroke=0.5)+
scale_color_manual(values = c("grey40","darkblue"))+
scale_shape_manual(values = c(16,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
#geom_point(stroke=0.5)+
scale_color_manual(values = c("grey40","darkblue"))+
scale_shape_manual(values = c(1,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
gg_vankrev(sorbed[sorbed$adsorbed=="sorbed",], aes(x = OC, y = HC, color=fenton, shape = fenton))+
# scale_color_manual(values = c("#F1A340","#998EC3"))+
#geom_point(stroke=0.5)+
scale_color_manual(values = c("red","darkblue"))+
scale_shape_manual(values = c(1,16))+
#facet_wrap(~fenton)+
theme_kp()+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
meta_elements = read.csv(ELEMENTS)
hcoc = read.csv(HCOC)
master = read.csv(FTICR_MASTER_LONG)# <- "fticr/fticr_master_long.csv" #
class = read.csv(CLASS)# <- "fticr/meta_class.csv"
relabund = read.csv(RELATIVE_ABUND)# <- "fticr/fticr_relative_abundance.csv"
elements = read.csv(SUMMARY_ELEMENTS)# <- "fticr/fticr_summary_elements.csv"
percentile = read.csv(PERCENTILE)
fentonloss = read.csv(FENTON_LOSS)
sorbed = read.csv(GOETHITE_ADSORPTION)
sorbed_relabund = read.csv(GOETHITE_RELABUND)
source("0-packages.R")
meta_elements = read.csv(ELEMENTS)
hcoc = read.csv(HCOC)
master = read.csv(FTICR_MASTER_LONG)# <- "fticr/fticr_master_long.csv" #
class = read.csv(CLASS)# <- "fticr/meta_class.csv"
relabund = read.csv(RELATIVE_ABUND)# <- "fticr/fticr_relative_abundance.csv"
elements = read.csv(SUMMARY_ELEMENTS)# <- "fticr/fticr_summary_elements.csv"
percentile = read.csv(PERCENTILE)
fentonloss = read.csv(FENTON_LOSS)
sorbed = read.csv(GOETHITE_ADSORPTION)
sorbed_relabund = read.csv(GOETHITE_RELABUND)
master %>%
group_by(Treatment,Mass) %>%
dplyr::summarise(intensity = mean(intensity)) %>%
left_join(dplyr::select(meta_elements, O, Mass), by = "Mass") %>%
dplyr::filter(Treatment=="PreFenton"| Treatment=="PostFenton")->master_el
master_el %>%
left_join(class, by = "Mass") %>%
filter(Class=="Carbohydrate-like"|Class=="Lignin-like") %>%
group_by(Treatment,Class,O) %>%
dplyr::summarise(count = n()) %>%
ungroup %>%
group_by(Treatment,Class) ->temp_master
ggplot(temp_master[temp_master$Class=="Carbohydrate-like"| temp_master$Class=="Lignin-like",], aes(x = O, y =count, fill = Treatment))+
geom_bar(stat = "identity")+
facet_grid(Treatment~ Class)+
theme_kp()
ggplot(master_el, aes(x = O, fill = Treatment))+
geom_histogram(binwidth = 1)+
facet_wrap(Forest~Treatment)
ggplot(temp_master, aes(x = O, y = count, fill = Treatment))+
geom_bar(stat = "identity")+
facet_wrap(Treatment~.)
master_el %>%
group_by(Treatment) %>%
dplyr::mutate(median = median(O))->master_el
master_el %>%
group_by(Treatment) %>%
dplyr::summarise(n = n())
sorbed %>%
left_join(select(meta_elements,Mass,O), by = "Mass")->sorbed_temp
sorbed_temp %>%
group_by(adsorbed) %>%
dplyr::summarise(median = median(O))
ggplot(sorbed_temp[sorbed_temp$adsorbed=="sorbed"&(temp$Class=="Carbohydrate-like"|temp$Class=="Lignin-like"),], aes(x = O, fill = adsorbed))+
geom_histogram(binwidth = 1)+
facet_grid(Forest+fenton~adsorbed+Class)
fenton_el %>%
left_join(class, by = "Mass") %>%
group_by(Class, Forest, Treatment, loss) %>%
dplyr::summarize(median = median(O))->temp
ggplot(temp, aes(x = O, fill = loss))+
geom_histogram()+
facet_grid(Forest+loss~Class)
sorbed_relabund2
sorbed_relabund %>%
group_by(fenton,adsorbed,Class) %>%
dplyr::summarise(relabund = mean(relabund)) %>%
ungroup %>%
dplyr::mutate(fenton = factor(fenton, levels = c("PreFenton","PostFenton")),
Class = factor(Class, levels = c("Condensed Ar",
"Aromatic",
"Lignin-like",
"Carbohydrate-like",
"Aliphatic-noN",
"Aliphatic+N")))->
sorbed_relabund2
View(sorbed_relabund2)
View(sorbed_relabund)
View(sorbed)
View(sorbed_temp)
sorbed_temp1 %>%
group_by(adsorbed, fenton) %>%
dplyr::summarize(median = median(O))
#### molecular analysis of sorbed
sorbed %>%
group_by(Mass,fenton,adsorbed) %>%
dplyr::summarise(HC = mean(HC),
OC = mean(OC))%>%
left_join(class, by = "Mass") %>%
left_join(select(meta_elements,Mass,O),  by = "Mass") %>%
filter(Class=="Carbohydrate-like"|Class=="Lignin-like") ->sorbed_temp1
sorbed_temp1%>%
group_by(Class,adsorbed, fenton, O) %>%
dplyr::summarise(count = n()) ->sorbed_temp2
ggplot(sorbed_temp2[sorbed_temp2$adsorbed=="sorbed",], aes(x=as.factor(OC), y=count, fill=fenton))+
geom_bar(stat = "identity", alpha=0.8)+
scale_fill_brewer(palette="Dark2")+
#  scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))+
# scale_x_continuous(limits = c(0,30))+
ylab("number of peaks")+
xlab("number of O")+
facet_grid(fenton~Class)+
theme_kp()
sorbed_temp1 %>%
group_by(adsorbed, fenton) %>%
dplyr::summarize(median = median(O))
View(sorbed_temp1)
sorbed_temp1 %>%
group_by(adsorbed, fenton,Class) %>%
dplyr::summarize(median = median(O))
fenton_el = merge(fentonloss, meta_elements, by = "Mass", all.x=TRUE)
fenton_el %>%
group_by(loss,O) %>%
dplyr::summarize(counts = n()) %>%
dplyr::mutate(counts = as.numeric(counts))%>%
ungroup() %>%
group_by(loss) %>%
dplyr::mutate(cumsum = cumsum(counts),
counts2 = if_else(loss == "gained",counts,-1*counts))->
loss_summary2
fenton_el %>%
group_by(Mass,loss) %>%
dplyr::summarise(HC = mean(HC),
OC = mean(OC),
O = mean(O)) %>%
left_join(class, by = "Mass") %>%
filter(Class=="Carbohydrate-like"|Class=="Lignin-like") ->fenton_temp1
fenton_temp1 %>%
group_by(Class,loss) %>%
dplyr::summarize(median = median(O))
View(fenton_temp1)
fenton_temp1 %>%
group_by(Class,loss) %>%
dplyr::summarize(median = median(O),
n = n())
fenton_temp1 %>%
group_by(loss) %>%
dplyr::summarize(median = median(O),
n = n())
